1.
	create database aparaty;
	create user '279734'@'localhost' identified by 'wziatek34';
	grant select, update, insert on aparaty.* to '279734'@localhost';
	flush privileges;

2.
	CREATE TABLE Matryca(
    -> ID int PRIMARY KEY AUTO_INCREMENT,
    -> przekatna decimal(4,2) check (przekatna > 0),
    -> rozdzielczosc decimal(3,1) check (rozdzielczosc > 0),
    -> typ varchar(10));

	CREATE TABLE Obiektyw(
    -> ID int PRIMARY KEY AUTO_INCREMENT,
    -> model varchar(30),
    -> minPrzeslona float check (minPrzeslona > 0),
    -> maxPrzeslona float check (maxPrzeslona > minPrzeslona));

	CREATE TABLE Producent(
    -> ID int PRIMARY KEY AUTO_INCREMENT,
    -> nazwa varchar(50) NOT NULL,
    -> kraj varchar (20) DEFAULT "nieznany",
    -> adresKorespondencyjny varchar(100) DEFAULT "nieznany");

	ALTER TABLE Matryca AUTO_INCREMENT = 100;

	CREATE TABLE Aparat(
    -> model varchar(30) PRIMARY KEY,
    -> producent int,
    -> matryca int,
    -> obiektyw int,
    -> waga float check (waga > 0),
    -> typ enum ('kompaktowy', 'lustrzanka', 'profesjonalny', 'inny'),
    -> FOREIGN KEY (matryca) references Matryca(ID),
    -> FOREIGN KEY (producent) references Producent(ID),
    -> FOREIGN KEY (obiektyw) references Obiektyw(ID));

3.
	INSERT INTO MATRYCA(przekatna, rozdzielczosc, typ) VALUES 
	(34.55, 13.23, 'typ1'),	
	(14.55, 52.23, 'typ6'),
	(32.55, 27.23, 'typ4'),
	(41.55, 63.23, 'typ2'),
	(34.55, 87.23, 'typ3'),
	(38.55, 12.23, 'typ2'),
	(34.55, 43.23, 'typ7'),
	(49.55, 81.23, 'typ2'),
	(31.55, 93.23, 'typ1'),
	(32.55, 57.23, 'typ5'),
	(34.55, 58.23, 'typ4');

	INSERT INTO PRODUCENT(nazwa, kraj, adresKorespondencyjny) VALUES
	('Canon', 'Chiny', 'Pekin'),
	('Canon', 'Chiny', 'Pekin'),
	('Canon', 'Chiny', 'Pekin'),
	('Canon', 'Chiny', 'Pekin'),
	('Canon', 'Chiny', 'Pekin'),
	('Casio', 'Japonia', 'Tokyo'),
	('Casio', 'Japonia', 'Tokyo'),
	('Casio', 'Japonia', 'Tokyo'),
	('Casio', 'Japonia', 'Tokyo'),
	('Casio', 'Japonia', 'Tokyo'),
	('Kodak', 'Poland', 'Warsaw'),
	('Kodak', 'Poland', 'Warsaw'),
	('Kodak', 'Poland', 'Warsaw'),
	('Kodak', 'Poland', 'Warsaw'),
	('Kodak', 'Poland', 'Warsaw');

	INSERT INTO OBIEKTYW(model, minPrzeslona, maxPrzeslona) VALUES
	('model a', 10.1, 15.1),
	('model a', 10.1, 15.1),
	('model a', 10.1, 15.1),
	('model a', 10.1, 15.1),
	('model a', 10.1, 15.1),
	('model b', 9.1, 16.1),
	('model b', 9.1, 16.1),
	('model b', 9.1, 16.1),
	('model b', 9.1, 16.1),
	('model b', 9.1, 16.1),
	('model c', 11.1, 14.1),
	('model c', 11.1, 14.1),
	('model c', 11.1, 14.1),
	('model c', 11.1, 14.1),
	('model c', 11.1, 14.1);

	INSERT INTO APARAT(model, producent, matryca, obiektyw, waga, typ) VALUES
	('Canon 5', 14, 102, 2, 0.80, 'profesjonalny'),
	('Canon 2', 13, 103, 3, 0.80, 'profesjonalny'),
	('Canon 3', 12, 104, 4, 0.80, 'profesjonalny'),
	('Canon 4', 11, 105, 5, 0.80, 'profesjonalny'),
	('Kodak 1', 10, 106, 6, 0.80, 'profesjonalny'),
	('Kodak 2', 9, 107, 7, 0.80, 'profesjonalny'),
	('Kodak 3', 8, 108, 8, 0.80, 'profesjonalny'),
	('Kodak 4', 7, 109, 9, 0.80, 'profesjonalny'),
	('Kodak 5', 6, 110, 10, 0.80, 'profesjonalny'),
	('Casio 1', 5, 111, 11, 0.81, 'profesjonalny'),
	('Casio 2', 4, 112, 12, 0.81, 'profesjonalny'),
	('Casio 3', 3, 113, 13, 0.81, 'profesjonalny'),
	('Casio 4', 2, 114, 14, 0.81, 'profesjonalny'),
	('Casio 5', 1, 115, 15, 0.81, 'profesjonalny');

4.
	
	delimiter $$
	create procedure generujAparaty()
	 begin
		declare i int default 1;
		declare nowyModel varchar(30);
		while i <= 100 do
			set nowyModel = concat('nowyModel', i);
			INSERT INTO Aparat VALUES(nowyModel, 1, 102, 1, 0.8, 'lustrzanka');
			set i =  i + 1;
		end while;
	 end $$
	delimiter ;

5.

	delimiter $$
	create procedure najmniejszaPrzekatnaProducenta(IN ProducentID int)
	 begin
		SELECT MIN(przekatna)
		FROM Matryca m
		INNER JOIN Aparat a on a.matryca = m.ID
		INNER JOIN PRODUCENT p on p.ID = a.producent
		WHERE producentID = p.ID;
	end $$
	delimiter ;

6.

	delimiter $$
	CREATE TRIGGER dodajProducenta
	BEFORE INSERT ON APARAT
	FOR EACH ROW
	begin
		if not exists (SELECT 1 FROM Producent where new.producent = Producent.ID) then
			INSERT INTO Producent (ID, nazwa)
			VALUES (new.producent, 'nieznany');
		end if;
	end $$

	delimiter ;
	
		
	INSERT INTO Aparat (model, producent, matryca, obiektyw) VALUES ('model zad_6', 17, 101, 3);

7.

	delimiter $$

	CREATE FUNCTION liczbaModeli(ID int) returns int
	 begin
		DECLARE liczba int;
		SELECT COUNT(ID)
		INTO liczba
		FROM APARAT
		WHERE APARAT.matryca = ID;
		return liczba;
	end $$

	delimiter ;

8.

	delimiter $$

	CREATE TRIGGER usunMatryce 
	AFTER DELETE ON APARAT 
	FOR EACH ROW
	begin 
		if not exists (SELECT 1 FROM APARAT WHERE matryca = OLD.Matryca) then
			DELETE FROM MATRYCA
			WHERE ID = OLD.matryca;
		end if;
	end $$
	 
	delimiter ;

9.
	
	CREATE VIEW widokNieChiny as
	SELECT Aparat.model, waga, nazwa, przekatna, rozdzielczosc, minPrzeslona, maxPrzeslona
	From Aparat
	INNER JOIN Producent on Producent.ID = producent
	INNER JOIN Matryca on Matryca.ID = matryca
	INNER JOIN Obiektyw on Obiektyw.ID = obiektyw
	WHERE kraj != 'Chiny' and Aparat.typ = 'lustrzanka';
	
	//dla moich danych jest null, lustrzanki są tylko chińskie

10.

	CREATE VIEW nazwy_i_pochodzenie_producentow as 
	SELECT nazwa, kraj, a.model
	FROM Producent as p
	INNER JOIN Aparat as a ON a.producent = p.ID;
	

11. 
// procedura, żeby uzupełnić kolumne liczbaModeli z tabeli Procedura

delimiter $$

CREATE PROCEDURE uzupelnijLiczbeModeli() 
 begin
	UPDATE producent p
	set liczbaModeli = (
		select count(*)
		from aparat a
		where a.producent = p.ID
	);
 end $$
 
delimiter ;

//trigger, który zwiększa liczbe modeli danego producenta po dodaniu modelu

delimiter $$

CREATE TRIGGER zwiększModele
 before insert on Aparat
 for each row
 	begin

	update producent p
	set liczbaModeli = liczbaModeli + 1
	where ID = NEW.producent;
	
	end$$

delimiter ;

//trigger, ktory zmniejsza liczbe modeli danego producenta po usunieciu modelu

delimiter $$

CREATE TRIGGER zmniejszModele 
 before  delete on Aparat 
 for each row 
	begin
	
	update producent p
	set liczbaModeli = liczbaModeli - 1
	where ID = OLD.producent;

end $$

delimiter ;

//trigger, ktory zmienia wartosci dla kolumny liczbaModeli przy zmianie producenta

delimiter $$

CREATE TRIGGER zmienProducenta
 before update on Aparat
 for each row
	begin

	update producent p
	set liczbaModeli = liczbaModeli + 1
	where ID = NEW.producent;

	update producent p
	set liczbaModeli = liczbaModeli - 1
	where ID = OLD.producent;

	end $$

delimiter ;
		



	